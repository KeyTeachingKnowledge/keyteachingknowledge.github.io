{"ast":null,"code":"import { useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SetSelectedChoice } from \"../../../redux/slices/quiz\";\nimport { SetModalVisible } from \"../../../redux/slices/quiz\";\nimport { SetIsCorrect } from \"../../../redux/slices/quiz\";\nimport { IsTraversing } from \"../../../redux/slices/quiz\";\nimport { Colors } from \"../../../redux/slices/settings\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Choices(_ref) {\n  var A0 = _ref.A0,\n      A1 = _ref.A1,\n      A2 = _ref.A2,\n      A3 = _ref.A3,\n      correct = _ref.correct,\n      correctAnswers = _ref.correctAnswers;\n  var dispatch = useDispatch();\n  var shownQuestion = useSelector(function (state) {\n    return state.quiz.shownQuestion;\n  });\n\n  var setIsCorrect = function setIsCorrect(payload) {\n    return dispatch(SetIsCorrect(payload));\n  };\n\n  var _ref2 = [useSelector(function (state) {\n    return state.quiz.selectedChoice;\n  }), function (payload) {\n    return dispatch(SetSelectedChoice(payload));\n  }],\n      selectedChoice = _ref2[0],\n      setSelectedChoice = _ref2[1];\n  var selectedChoices = useSelector(function (state) {\n    return state.quiz.selectedChoices;\n  });\n\n  var setModalVisible = function setModalVisible(payload) {\n    return dispatch(SetModalVisible(payload));\n  };\n\n  var isTraversing = useSelector(IsTraversing);\n  var colors = useSelector(Colors);\n\n  var setChoiceHandler = function setChoiceHandler(choice) {\n    if (!isTraversing) {\n      setSelectedChoice(choice);\n      setIsCorrect(choice == correct ? 1 : 0);\n    }\n\n    if (isTraversing && selectedChoices[shownQuestion] == choice) {\n      setIsCorrect(selectedChoices[shownQuestion] == correctAnswers[shownQuestion] ? 1 : 0);\n      setModalVisible(true);\n    }\n  };\n\n  var answerStyles = function answerStyles(choice, defaultStyle, selectStyle, traverseStyleCorrect, traverseStyleIncorrect) {\n    return [defaultStyle, selectedChoice == choice && selectStyle, selectedChoices[shownQuestion] == choice && isTraversing && (choice == correctAnswers[shownQuestion] ? traverseStyleCorrect : traverseStyleIncorrect)];\n  };\n\n  return _jsxs(ScrollView, {\n    style: [styles.answersContainer],\n    children: [_jsxs(Pressable, {\n      style: answerStyles(1, [styles.answer, {\n        borderColor: colors.border\n      }], [styles.selectedAnswer, {\n        backgroundColor: colors.light\n      }], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect),\n      onPressIn: function onPressIn() {\n        return setChoiceHandler(1);\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: answerStyles(1, [styles.letter, {\n            color: colors.light\n          }], [[styles.selectedLetter, {\n            color: colors.dark\n          }], {\n            color: colors.dark\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }]),\n          children: \"A\"\n        })\n      }), _jsx(Text, {\n        style: answerStyles(1, [styles.answerText, {\n          color: colors.light\n        }], [styles.selectedAnswerText, {\n          color: colors.dark\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }]),\n        children: A0\n      })]\n    }), _jsxs(Pressable, {\n      style: answerStyles(2, [styles.answer, {\n        borderColor: colors.border\n      }], [styles.selectedAnswer, {\n        backgroundColor: colors.light\n      }], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect),\n      onPressIn: function onPressIn() {\n        return setChoiceHandler(2);\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: answerStyles(2, [styles.letter, {\n            color: colors.light\n          }], [[styles.selectedLetter, {\n            color: colors.dark\n          }], {\n            color: colors.dark\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }]),\n          children: \"B\"\n        })\n      }), _jsx(Text, {\n        style: answerStyles(2, [styles.answerText, {\n          color: colors.light\n        }], [styles.selectedAnswerText, {\n          color: colors.dark\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }]),\n        children: A1\n      })]\n    }), _jsxs(Pressable, {\n      style: answerStyles(3, [styles.answer, {\n        borderColor: colors.border\n      }], [styles.selectedAnswer, {\n        backgroundColor: colors.light\n      }], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect),\n      onPressIn: function onPressIn() {\n        return setChoiceHandler(3);\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: answerStyles(3, [styles.letter, {\n            color: colors.light\n          }], [[styles.selectedLetter, {\n            color: colors.dark\n          }], {\n            color: colors.dark\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }]),\n          children: \"C\"\n        })\n      }), _jsx(Text, {\n        style: answerStyles(3, [styles.answerText, {\n          color: colors.light\n        }], [styles.selectedAnswerText, {\n          color: colors.dark\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }]),\n        children: A2\n      })]\n    }), _jsxs(Pressable, {\n      style: answerStyles(4, [styles.answer, {\n        borderColor: colors.border\n      }], [styles.selectedAnswer, {\n        backgroundColor: colors.light\n      }], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect),\n      onPressIn: function onPressIn() {\n        return setChoiceHandler(4);\n      },\n      children: [_jsx(View, {\n        children: _jsx(Text, {\n          style: answerStyles(4, [styles.letter, {\n            color: colors.light\n          }], [[styles.selectedLetter, {\n            color: colors.dark\n          }], {\n            color: colors.dark\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }], [styles.selectedLetterCorrection, {\n            color: 'white'\n          }]),\n          children: \"D\"\n        })\n      }), _jsx(Text, {\n        style: answerStyles(4, [styles.answerText, {\n          color: colors.light\n        }], [styles.selectedAnswerText, {\n          color: colors.dark\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }], [styles.selectedAnswerTextCorrection, {\n          color: 'white'\n        }]),\n        children: A3\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  answersContainer: {\n    maxWidth: '93%',\n    minWidth: '93%'\n  },\n  letter: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: 20,\n    marginLeft: 10\n  },\n  selectedLetter: {\n    fontFamily: 'Poppins-ExtraBold',\n    fontSize: 23,\n    marginLeft: 10\n  },\n  answer: {\n    maxwidth: '100%',\n    minWidth: '100%',\n    paddingVertical: 10,\n    marginVertical: 10,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderRadius: 20,\n    borderWidth: 1.5,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 10\n  },\n  selectedAnswer: {},\n  selectedLetterCorrection: {},\n  selectedAnswerCorrect: {\n    backgroundColor: '#32c953',\n    borderColor: '#029943'\n  },\n  selectedAnswerIncorrect: {\n    backgroundColor: '#c93232',\n    borderColor: '#993232'\n  },\n  answerText: {\n    paddingHorizontal: 25,\n    fontFamily: 'Poppins-Regular'\n  },\n  selectedAnswerText: {\n    fontFamily: 'Poppins-Regular'\n  },\n  selectedAnswerTextCorrection: {\n    fontFamily: 'Poppins-Regular'\n  }\n});","map":{"version":3,"names":["useContext","useSelector","useDispatch","SetSelectedChoice","SetModalVisible","SetIsCorrect","IsTraversing","Colors","Choices","A0","A1","A2","A3","correct","correctAnswers","dispatch","shownQuestion","state","quiz","setIsCorrect","payload","selectedChoice","setSelectedChoice","selectedChoices","setModalVisible","isTraversing","colors","setChoiceHandler","choice","answerStyles","defaultStyle","selectStyle","traverseStyleCorrect","traverseStyleIncorrect","styles","answersContainer","answer","borderColor","border","selectedAnswer","backgroundColor","light","selectedAnswerCorrect","selectedAnswerIncorrect","letter","color","selectedLetter","dark","selectedLetterCorrection","answerText","selectedAnswerText","selectedAnswerTextCorrection","StyleSheet","create","maxWidth","minWidth","fontFamily","fontSize","marginLeft","maxwidth","paddingVertical","marginVertical","borderRadius","borderWidth","flexDirection","alignItems","paddingHorizontal"],"sources":["/Users/essam/Documents/GitHub/quizzery.github.io/components/QuizScreen/subcomponents/Choices.js"],"sourcesContent":["import { useContext } from 'react';\nimport { StyleSheet, Text, View, Pressable, ScrollView } from 'react-native';\nimport {  useSelector, useDispatch } from 'react-redux';\nimport { SetSelectedChoice } from \"../../../redux/slices/quiz\";\nimport { SetModalVisible } from \"../../../redux/slices/quiz\";\nimport { SetIsCorrect } from '../../../redux/slices/quiz';\nimport { IsTraversing } from '../../../redux/slices/quiz';\nimport { Colors } from '../../../redux/slices/settings';\n\nexport default function Choices({A0, A1, A2, A3, correct,  correctAnswers }) {\n  const dispatch = useDispatch(); \n  const shownQuestion  = useSelector(state => state.quiz.shownQuestion);\n  const setIsCorrect  = (payload) => dispatch(SetIsCorrect(payload));\n  const [ selectedChoice , setSelectedChoice ] = [ useSelector(state => state.quiz.selectedChoice), (payload) => dispatch(SetSelectedChoice(payload))];\n  const selectedChoices = useSelector(state => state.quiz.selectedChoices);\n  const setModalVisible = (payload) => dispatch(SetModalVisible(payload));\n  const isTraversing = useSelector(IsTraversing);\n  const colors = useSelector(Colors)\n   const setChoiceHandler = (choice) => {\n      if(!isTraversing) {\n      setSelectedChoice(choice);\n      setIsCorrect(choice == correct ? 1 : 0);\n      }\n      if(isTraversing && (selectedChoices[shownQuestion] == choice)){\n        setIsCorrect(selectedChoices[shownQuestion] == correctAnswers[shownQuestion] ? 1 : 0);\n        setModalVisible(true);\n      }\n   };\n\n   const answerStyles = (choice, defaultStyle, selectStyle, traverseStyleCorrect, traverseStyleIncorrect) => { return (\n    [defaultStyle, (selectedChoice == choice) && selectStyle,\n      ((selectedChoices[shownQuestion] == choice) && isTraversing &&\n       ((choice == correctAnswers[shownQuestion])? traverseStyleCorrect: traverseStyleIncorrect))]);}\n\n   return (\n      <ScrollView style={[styles.answersContainer]} >\n      <Pressable style={answerStyles(1, [styles.answer, { borderColor: colors.border, }], [styles.selectedAnswer, { backgroundColor: colors.light,}], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect)} onPressIn={()=>setChoiceHandler(1)}>\n        <View><Text style={answerStyles(1, [styles.letter, { color: colors.light}], [[styles.selectedLetter, { color: colors.dark,}], { color: colors.dark}], [styles.selectedLetterCorrection, { color: 'white'}], [styles.selectedLetterCorrection, { color: 'white'}])}>A</Text></View>\n        <Text style={answerStyles(1, [styles.answerText, {color: colors.light,}], [styles.selectedAnswerText, { color: colors.dark,}], [styles.selectedAnswerTextCorrection, { color: 'white',}], [styles.selectedAnswerTextCorrection, { color: 'white',}])}>\n          {A0}\n        </Text>\n      </Pressable>\n      <Pressable style={answerStyles(2, [styles.answer, { borderColor: colors.border, }], [styles.selectedAnswer, { backgroundColor: colors.light,}], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect)} onPressIn={()=>setChoiceHandler(2)}>\n      <View><Text style={answerStyles(2, [styles.letter, { color: colors.light}], [[styles.selectedLetter, { color: colors.dark,}], { color: colors.dark}], [styles.selectedLetterCorrection, { color: 'white'}], [styles.selectedLetterCorrection, { color: 'white'}])}>B</Text></View>\n        <Text style={answerStyles(2, [styles.answerText, {color: colors.light,}], [styles.selectedAnswerText, { color: colors.dark,}], [styles.selectedAnswerTextCorrection, { color: 'white',}], [styles.selectedAnswerTextCorrection, { color: 'white',}])}>\n          {A1}\n        </Text>\n      </Pressable>\n      <Pressable style={answerStyles(3, [styles.answer, { borderColor: colors.border, }], [styles.selectedAnswer, { backgroundColor: colors.light,}], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect)} onPressIn={()=>setChoiceHandler(3)}>\n      <View><Text style={answerStyles(3, [styles.letter, { color: colors.light}], [[styles.selectedLetter, { color: colors.dark,}], { color: colors.dark}], [styles.selectedLetterCorrection, { color: 'white'}], [styles.selectedLetterCorrection, { color: 'white'}])}>C</Text></View>\n        <Text style={answerStyles(3, [styles.answerText, {color: colors.light,}], [styles.selectedAnswerText, { color: colors.dark,}], [styles.selectedAnswerTextCorrection, { color: 'white',}], [styles.selectedAnswerTextCorrection, { color: 'white',}])}>\n          {A2}\n        </Text>\n      </Pressable>\n      <Pressable style={answerStyles(4, [styles.answer, { borderColor: colors.border, }], [styles.selectedAnswer, { backgroundColor: colors.light,}], styles.selectedAnswerCorrect, styles.selectedAnswerIncorrect)} onPressIn={()=>setChoiceHandler(4)}>\n      <View><Text style={answerStyles(4, [styles.letter, { color: colors.light}], [[styles.selectedLetter, { color: colors.dark,}], { color: colors.dark}], [styles.selectedLetterCorrection, { color: 'white'}], [styles.selectedLetterCorrection, { color: 'white'}])}>D</Text></View>\n        <Text style={answerStyles(4, [styles.answerText, {color: colors.light,}], [styles.selectedAnswerText, { color: colors.dark,}], [styles.selectedAnswerTextCorrection, { color: 'white',}], [styles.selectedAnswerTextCorrection, { color: 'white',}])}>\n          {A3}\n        </Text>\n      </Pressable>\n      </ScrollView>\n   );\n}\n\n\nconst styles = StyleSheet.create({\n\n   answersContainer: {\n     maxWidth: '93%',\n     minWidth: '93%',\n   },\n\n    letter: {\n      fontFamily: 'Poppins-Bold',\n      fontSize: 20,\n      marginLeft: 10,\n    },\n    selectedLetter: {\n      fontFamily: 'Poppins-ExtraBold',\n      fontSize: 23,\n      marginLeft: 10,\n    },\n  \n   answer: {\n     maxwidth: '100%',\n     minWidth: '100%',\n     paddingVertical: 10,\n     marginVertical: 10,\n     backgroundColor: 'rgba(0,0,0,0)',\n     borderRadius: 20,\n     borderWidth: 1.5,\n     flexDirection: 'row',\n     alignItems: 'center',\n     paddingHorizontal: 10,\n   },\n   selectedAnswer: {\n      \n   },\n   selectedLetterCorrection: {\n      \n  },\n   selectedAnswerCorrect: {\n      backgroundColor: '#32c953',   \n      borderColor: '#029943',\n   },\n    selectedAnswerIncorrect: {\n      backgroundColor: '#c93232',  \n      borderColor: '#993232',\n    },\n   answerText: {\n    paddingHorizontal: 25,\n    fontFamily: 'Poppins-Regular',\n  },\n   selectedAnswerText: {\n      \n      fontFamily: 'Poppins-Regular',\n   },\n   selectedAnswerTextCorrection: {\n    \n    fontFamily: 'Poppins-Regular',\n },\n  \n });\n "],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;;;;;;AAEA,SAAUC,WAAV,EAAuBC,WAAvB,QAA0C,aAA1C;AACA,SAASC,iBAAT;AACA,SAASC,eAAT;AACA,SAASC,YAAT;AACA,SAASC,YAAT;AACA,SAASC,MAAT;;;AAEA,eAAe,SAASC,OAAT,OAA8D;EAAA,IAA5CC,EAA4C,QAA5CA,EAA4C;EAAA,IAAxCC,EAAwC,QAAxCA,EAAwC;EAAA,IAApCC,EAAoC,QAApCA,EAAoC;EAAA,IAAhCC,EAAgC,QAAhCA,EAAgC;EAAA,IAA5BC,OAA4B,QAA5BA,OAA4B;EAAA,IAAlBC,cAAkB,QAAlBA,cAAkB;EAC3E,IAAMC,QAAQ,GAAGb,WAAW,EAA5B;EACA,IAAMc,aAAa,GAAIf,WAAW,CAAC,UAAAgB,KAAK;IAAA,OAAIA,KAAK,CAACC,IAAN,CAAWF,aAAf;EAAA,CAAN,CAAlC;;EACA,IAAMG,YAAY,GAAI,SAAhBA,YAAgB,CAACC,OAAD;IAAA,OAAaL,QAAQ,CAACV,YAAY,CAACe,OAAD,CAAb,CAArB;EAAA,CAAtB;;EACA,YAA+C,CAAEnB,WAAW,CAAC,UAAAgB,KAAK;IAAA,OAAIA,KAAK,CAACC,IAAN,CAAWG,cAAf;EAAA,CAAN,CAAb,EAAmD,UAACD,OAAD;IAAA,OAAaL,QAAQ,CAACZ,iBAAiB,CAACiB,OAAD,CAAlB,CAArB;EAAA,CAAnD,CAA/C;EAAA,IAAQC,cAAR;EAAA,IAAyBC,iBAAzB;EACA,IAAMC,eAAe,GAAGtB,WAAW,CAAC,UAAAgB,KAAK;IAAA,OAAIA,KAAK,CAACC,IAAN,CAAWK,eAAf;EAAA,CAAN,CAAnC;;EACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACJ,OAAD;IAAA,OAAaL,QAAQ,CAACX,eAAe,CAACgB,OAAD,CAAhB,CAArB;EAAA,CAAxB;;EACA,IAAMK,YAAY,GAAGxB,WAAW,CAACK,YAAD,CAAhC;EACA,IAAMoB,MAAM,GAAGzB,WAAW,CAACM,MAAD,CAA1B;;EACC,IAAMoB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;IAClC,IAAG,CAACH,YAAJ,EAAkB;MAClBH,iBAAiB,CAACM,MAAD,CAAjB;MACAT,YAAY,CAACS,MAAM,IAAIf,OAAV,GAAoB,CAApB,GAAwB,CAAzB,CAAZ;IACC;;IACD,IAAGY,YAAY,IAAKF,eAAe,CAACP,aAAD,CAAf,IAAkCY,MAAtD,EAA8D;MAC5DT,YAAY,CAACI,eAAe,CAACP,aAAD,CAAf,IAAkCF,cAAc,CAACE,aAAD,CAAhD,GAAkE,CAAlE,GAAsE,CAAvE,CAAZ;MACAQ,eAAe,CAAC,IAAD,CAAf;IACD;EACH,CATD;;EAWA,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACD,MAAD,EAASE,YAAT,EAAuBC,WAAvB,EAAoCC,oBAApC,EAA0DC,sBAA1D,EAAqF;IAAE,OAC3G,CAACH,YAAD,EAAgBT,cAAc,IAAIO,MAAnB,IAA8BG,WAA7C,EACIR,eAAe,CAACP,aAAD,CAAf,IAAkCY,MAAnC,IAA8CH,YAA9C,KACEG,MAAM,IAAId,cAAc,CAACE,aAAD,CAAzB,GAA2CgB,oBAA3C,GAAiEC,sBADlE,CADH,CAD2G;EAGV,CAHlG;;EAKA,OACG,MAAC,UAAD;IAAY,KAAK,EAAE,CAACC,MAAM,CAACC,gBAAR,CAAnB;IAAA,WACA,MAAC,SAAD;MAAW,KAAK,EAAEN,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACE,MAAR,EAAgB;QAAEC,WAAW,EAAEX,MAAM,CAACY;MAAtB,CAAhB,CAAJ,EAAsD,CAACJ,MAAM,CAACK,cAAR,EAAwB;QAAEC,eAAe,EAAEd,MAAM,CAACe;MAA1B,CAAxB,CAAtD,EAAkHP,MAAM,CAACQ,qBAAzH,EAAgJR,MAAM,CAACS,uBAAvJ,CAA9B;MAA+M,SAAS,EAAE;QAAA,OAAIhB,gBAAgB,CAAC,CAAD,CAApB;MAAA,CAA1N;MAAA,WACE,KAAC,IAAD;QAAA,UAAM,KAAC,IAAD;UAAM,KAAK,EAAEE,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACU,MAAR,EAAgB;YAAEC,KAAK,EAAEnB,MAAM,CAACe;UAAhB,CAAhB,CAAJ,EAA6C,CAAC,CAACP,MAAM,CAACY,cAAR,EAAwB;YAAED,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAxB,CAAD,EAAkD;YAAEF,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAlD,CAA7C,EAAuH,CAACb,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAAvH,EAA6K,CAACX,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAA7K,CAAzB;UAAA;QAAA;MAAN,EADF,EAEE,KAAC,IAAD;QAAM,KAAK,EAAEhB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACe,UAAR,EAAoB;UAACJ,KAAK,EAAEnB,MAAM,CAACe;QAAf,CAApB,CAAJ,EAAiD,CAACP,MAAM,CAACgB,kBAAR,EAA4B;UAAEL,KAAK,EAAEnB,MAAM,CAACqB;QAAhB,CAA5B,CAAjD,EAAsG,CAACb,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAtG,EAAiK,CAACX,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAjK,CAAzB;QAAA,UACGpC;MADH,EAFF;IAAA,EADA,EAOA,MAAC,SAAD;MAAW,KAAK,EAAEoB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACE,MAAR,EAAgB;QAAEC,WAAW,EAAEX,MAAM,CAACY;MAAtB,CAAhB,CAAJ,EAAsD,CAACJ,MAAM,CAACK,cAAR,EAAwB;QAAEC,eAAe,EAAEd,MAAM,CAACe;MAA1B,CAAxB,CAAtD,EAAkHP,MAAM,CAACQ,qBAAzH,EAAgJR,MAAM,CAACS,uBAAvJ,CAA9B;MAA+M,SAAS,EAAE;QAAA,OAAIhB,gBAAgB,CAAC,CAAD,CAApB;MAAA,CAA1N;MAAA,WACA,KAAC,IAAD;QAAA,UAAM,KAAC,IAAD;UAAM,KAAK,EAAEE,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACU,MAAR,EAAgB;YAAEC,KAAK,EAAEnB,MAAM,CAACe;UAAhB,CAAhB,CAAJ,EAA6C,CAAC,CAACP,MAAM,CAACY,cAAR,EAAwB;YAAED,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAxB,CAAD,EAAkD;YAAEF,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAlD,CAA7C,EAAuH,CAACb,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAAvH,EAA6K,CAACX,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAA7K,CAAzB;UAAA;QAAA;MAAN,EADA,EAEE,KAAC,IAAD;QAAM,KAAK,EAAEhB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACe,UAAR,EAAoB;UAACJ,KAAK,EAAEnB,MAAM,CAACe;QAAf,CAApB,CAAJ,EAAiD,CAACP,MAAM,CAACgB,kBAAR,EAA4B;UAAEL,KAAK,EAAEnB,MAAM,CAACqB;QAAhB,CAA5B,CAAjD,EAAsG,CAACb,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAtG,EAAiK,CAACX,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAjK,CAAzB;QAAA,UACGnC;MADH,EAFF;IAAA,EAPA,EAaA,MAAC,SAAD;MAAW,KAAK,EAAEmB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACE,MAAR,EAAgB;QAAEC,WAAW,EAAEX,MAAM,CAACY;MAAtB,CAAhB,CAAJ,EAAsD,CAACJ,MAAM,CAACK,cAAR,EAAwB;QAAEC,eAAe,EAAEd,MAAM,CAACe;MAA1B,CAAxB,CAAtD,EAAkHP,MAAM,CAACQ,qBAAzH,EAAgJR,MAAM,CAACS,uBAAvJ,CAA9B;MAA+M,SAAS,EAAE;QAAA,OAAIhB,gBAAgB,CAAC,CAAD,CAApB;MAAA,CAA1N;MAAA,WACA,KAAC,IAAD;QAAA,UAAM,KAAC,IAAD;UAAM,KAAK,EAAEE,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACU,MAAR,EAAgB;YAAEC,KAAK,EAAEnB,MAAM,CAACe;UAAhB,CAAhB,CAAJ,EAA6C,CAAC,CAACP,MAAM,CAACY,cAAR,EAAwB;YAAED,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAxB,CAAD,EAAkD;YAAEF,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAlD,CAA7C,EAAuH,CAACb,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAAvH,EAA6K,CAACX,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAA7K,CAAzB;UAAA;QAAA;MAAN,EADA,EAEE,KAAC,IAAD;QAAM,KAAK,EAAEhB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACe,UAAR,EAAoB;UAACJ,KAAK,EAAEnB,MAAM,CAACe;QAAf,CAApB,CAAJ,EAAiD,CAACP,MAAM,CAACgB,kBAAR,EAA4B;UAAEL,KAAK,EAAEnB,MAAM,CAACqB;QAAhB,CAA5B,CAAjD,EAAsG,CAACb,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAtG,EAAiK,CAACX,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAjK,CAAzB;QAAA,UACGlC;MADH,EAFF;IAAA,EAbA,EAmBA,MAAC,SAAD;MAAW,KAAK,EAAEkB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACE,MAAR,EAAgB;QAAEC,WAAW,EAAEX,MAAM,CAACY;MAAtB,CAAhB,CAAJ,EAAsD,CAACJ,MAAM,CAACK,cAAR,EAAwB;QAAEC,eAAe,EAAEd,MAAM,CAACe;MAA1B,CAAxB,CAAtD,EAAkHP,MAAM,CAACQ,qBAAzH,EAAgJR,MAAM,CAACS,uBAAvJ,CAA9B;MAA+M,SAAS,EAAE;QAAA,OAAIhB,gBAAgB,CAAC,CAAD,CAApB;MAAA,CAA1N;MAAA,WACA,KAAC,IAAD;QAAA,UAAM,KAAC,IAAD;UAAM,KAAK,EAAEE,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACU,MAAR,EAAgB;YAAEC,KAAK,EAAEnB,MAAM,CAACe;UAAhB,CAAhB,CAAJ,EAA6C,CAAC,CAACP,MAAM,CAACY,cAAR,EAAwB;YAAED,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAxB,CAAD,EAAkD;YAAEF,KAAK,EAAEnB,MAAM,CAACqB;UAAhB,CAAlD,CAA7C,EAAuH,CAACb,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAAvH,EAA6K,CAACX,MAAM,CAACc,wBAAR,EAAkC;YAAEH,KAAK,EAAE;UAAT,CAAlC,CAA7K,CAAzB;UAAA;QAAA;MAAN,EADA,EAEE,KAAC,IAAD;QAAM,KAAK,EAAEhB,YAAY,CAAC,CAAD,EAAI,CAACK,MAAM,CAACe,UAAR,EAAoB;UAACJ,KAAK,EAAEnB,MAAM,CAACe;QAAf,CAApB,CAAJ,EAAiD,CAACP,MAAM,CAACgB,kBAAR,EAA4B;UAAEL,KAAK,EAAEnB,MAAM,CAACqB;QAAhB,CAA5B,CAAjD,EAAsG,CAACb,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAtG,EAAiK,CAACX,MAAM,CAACiB,4BAAR,EAAsC;UAAEN,KAAK,EAAE;QAAT,CAAtC,CAAjK,CAAzB;QAAA,UACGjC;MADH,EAFF;IAAA,EAnBA;EAAA,EADH;AA4BF;AAGD,IAAMsB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;EAE9BlB,gBAAgB,EAAE;IAChBmB,QAAQ,EAAE,KADM;IAEhBC,QAAQ,EAAE;EAFM,CAFY;EAO7BX,MAAM,EAAE;IACNY,UAAU,EAAE,cADN;IAENC,QAAQ,EAAE,EAFJ;IAGNC,UAAU,EAAE;EAHN,CAPqB;EAY7BZ,cAAc,EAAE;IACdU,UAAU,EAAE,mBADE;IAEdC,QAAQ,EAAE,EAFI;IAGdC,UAAU,EAAE;EAHE,CAZa;EAkB9BtB,MAAM,EAAE;IACNuB,QAAQ,EAAE,MADJ;IAENJ,QAAQ,EAAE,MAFJ;IAGNK,eAAe,EAAE,EAHX;IAINC,cAAc,EAAE,EAJV;IAKNrB,eAAe,EAAE,eALX;IAMNsB,YAAY,EAAE,EANR;IAONC,WAAW,EAAE,GAPP;IAQNC,aAAa,EAAE,KART;IASNC,UAAU,EAAE,QATN;IAUNC,iBAAiB,EAAE;EAVb,CAlBsB;EA8B9B3B,cAAc,EAAE,EA9Bc;EAiC9BS,wBAAwB,EAAE,EAjCI;EAoC9BN,qBAAqB,EAAE;IACpBF,eAAe,EAAE,SADG;IAEpBH,WAAW,EAAE;EAFO,CApCO;EAwC7BM,uBAAuB,EAAE;IACvBH,eAAe,EAAE,SADM;IAEvBH,WAAW,EAAE;EAFU,CAxCI;EA4C9BY,UAAU,EAAE;IACXiB,iBAAiB,EAAE,EADR;IAEXV,UAAU,EAAE;EAFD,CA5CkB;EAgD9BN,kBAAkB,EAAE;IAEjBM,UAAU,EAAE;EAFK,CAhDU;EAoD9BL,4BAA4B,EAAE;IAE7BK,UAAU,EAAE;EAFiB;AApDA,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}