{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar initialState = {\n  currentQuestion: 0,\n  shownQuestion: 0,\n  selectedChoice: -1,\n  selectedChoices: [],\n  isCorrect: -1,\n  modalVisible: false,\n  finishFlag: false,\n  newQuiz: true\n};\nvar reducers = {\n  SetCurrentQuestion: function SetCurrentQuestion(state, action) {\n    state.currentQuestion = action.payload;\n  },\n  SetShownQuestion: function SetShownQuestion(state, action) {\n    state.shownQuestion = action.payload;\n  },\n  SetSelectedChoice: function SetSelectedChoice(state, action) {\n    state.selectedChoice = action.payload;\n  },\n  SetSelectedChoices: function SetSelectedChoices(state, action) {\n    state.selectedChoices = action.payload;\n  },\n  SetModalVisible: function SetModalVisible(state, action) {\n    state.modalVisible = action.payload;\n  },\n  SetFinishFlag: function SetFinishFlag(state, action) {\n    state.finishFlag = action.payload;\n  },\n  SetIsCorrect: function SetIsCorrect(state, action) {\n    state.isCorrect = action.payload;\n  },\n  SetNewQuiz: function SetNewQuiz(state, action) {\n    state.newQuiz = action.payload;\n  },\n  ResetQuiz: function ResetQuiz(state) {\n    state.currentQuestion = 0;\n    state.shownQuestion = 0;\n    state.isCorrect = -1;\n    state.selectedChoice = -1;\n    state.selectedChoices = [];\n    state.finishFlag = false;\n    state.newQuiz = true;\n  }\n};\nvar quizSlice = createSlice({\n  name: \"quiz\",\n  initialState: initialState,\n  reducers: reducers\n});\nvar SetCurrentQuestion = quizSlice.actions.SetCurrentQuestion;\nexport { SetCurrentQuestion };\nvar SetShownQuestion = quizSlice.actions.SetShownQuestion;\nexport { SetShownQuestion };\nvar SetSelectedChoice = quizSlice.actions.SetSelectedChoice;\nexport { SetSelectedChoice };\nvar SetSelectedChoices = quizSlice.actions.SetSelectedChoices;\nexport { SetSelectedChoices };\nvar SetModalVisible = quizSlice.actions.SetModalVisible;\nexport { SetModalVisible };\nvar SetFinishFlag = quizSlice.actions.SetFinishFlag;\nexport { SetFinishFlag };\nvar SetIsCorrect = quizSlice.actions.SetIsCorrect;\nexport { SetIsCorrect };\nvar ResetQuiz = quizSlice.actions.ResetQuiz;\nexport { ResetQuiz };\nvar SetNewQuiz = quizSlice.actions.SetNewQuiz;\nexport { SetNewQuiz };\nexport var IsTraversing = function IsTraversing(state) {\n  return state.quiz.shownQuestion !== state.quiz.currentQuestion;\n};\nexport default quizSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentQuestion","shownQuestion","selectedChoice","selectedChoices","isCorrect","modalVisible","finishFlag","newQuiz","reducers","SetCurrentQuestion","state","action","payload","SetShownQuestion","SetSelectedChoice","SetSelectedChoices","SetModalVisible","SetFinishFlag","SetIsCorrect","SetNewQuiz","ResetQuiz","quizSlice","name","actions","IsTraversing","quiz","reducer"],"sources":["/Users/essam/Documents/GitHub/quizzery.github.io/redux/slices/quiz.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\n\nconst initialState = {\n   currentQuestion: 0,\n   shownQuestion: 0,\n   selectedChoice: -1,\n   selectedChoices: [],\n   isCorrect: -1,\n   modalVisible: false,\n   finishFlag: false,\n   newQuiz: true\n }\n \n const reducers = {\n \n   SetCurrentQuestion(state, action) {\n      state.currentQuestion = action.payload\n    },\n    SetShownQuestion(state, action) {\n      state.shownQuestion = action.payload\n    },\n    SetSelectedChoice(state, action) {\n      state.selectedChoice = action.payload\n    },\n    SetSelectedChoices(state, action) {\n      state.selectedChoices = action.payload\n    },\n    SetModalVisible(state, action) {\n      state.modalVisible = action.payload\n    },\n    SetFinishFlag(state, action) {\n      state.finishFlag = action.payload\n    },\n    SetIsCorrect(state, action) {\n      state.isCorrect = action.payload\n    },\n    SetNewQuiz(state, action) {\n      state.newQuiz = action.payload\n    },\n    ResetQuiz(state){\n      state.currentQuestion = 0;\n      state.shownQuestion = 0;\n      state.isCorrect = -1;\n      state.selectedChoice = -1;\n      state.selectedChoices = [];\n      state.finishFlag = false;\n      state.newQuiz = true;       // means we will randomize upon start then set it to false in app.js\n\n    }\n    \n }\n\nconst quizSlice = createSlice({name: \"quiz\", initialState, reducers})\n\nexport const { SetCurrentQuestion } = quizSlice.actions\nexport const { SetShownQuestion } = quizSlice.actions\nexport const { SetSelectedChoice } = quizSlice.actions\nexport const { SetSelectedChoices } = quizSlice.actions\nexport const { SetModalVisible } = quizSlice.actions\nexport const { SetFinishFlag } = quizSlice.actions\nexport const { SetIsCorrect } = quizSlice.actions\nexport const { ResetQuiz } = quizSlice.actions\nexport const { SetNewQuiz } = quizSlice.actions\nexport const IsTraversing = (state) => (state.quiz.shownQuestion !== state.quiz.currentQuestion)\nexport default quizSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,IAAMC,YAAY,GAAG;EAClBC,eAAe,EAAE,CADC;EAElBC,aAAa,EAAE,CAFG;EAGlBC,cAAc,EAAE,CAAC,CAHC;EAIlBC,eAAe,EAAE,EAJC;EAKlBC,SAAS,EAAE,CAAC,CALM;EAMlBC,YAAY,EAAE,KANI;EAOlBC,UAAU,EAAE,KAPM;EAQlBC,OAAO,EAAE;AARS,CAArB;AAWC,IAAMC,QAAQ,GAAG;EAEfC,kBAFe,8BAEIC,KAFJ,EAEWC,MAFX,EAEmB;IAC/BD,KAAK,CAACV,eAAN,GAAwBW,MAAM,CAACC,OAA/B;EACD,CAJa;EAKdC,gBALc,4BAKGH,KALH,EAKUC,MALV,EAKkB;IAC9BD,KAAK,CAACT,aAAN,GAAsBU,MAAM,CAACC,OAA7B;EACD,CAPa;EAQdE,iBARc,6BAQIJ,KARJ,EAQWC,MARX,EAQmB;IAC/BD,KAAK,CAACR,cAAN,GAAuBS,MAAM,CAACC,OAA9B;EACD,CAVa;EAWdG,kBAXc,8BAWKL,KAXL,EAWYC,MAXZ,EAWoB;IAChCD,KAAK,CAACP,eAAN,GAAwBQ,MAAM,CAACC,OAA/B;EACD,CAba;EAcdI,eAdc,2BAcEN,KAdF,EAcSC,MAdT,EAciB;IAC7BD,KAAK,CAACL,YAAN,GAAqBM,MAAM,CAACC,OAA5B;EACD,CAhBa;EAiBdK,aAjBc,yBAiBAP,KAjBA,EAiBOC,MAjBP,EAiBe;IAC3BD,KAAK,CAACJ,UAAN,GAAmBK,MAAM,CAACC,OAA1B;EACD,CAnBa;EAoBdM,YApBc,wBAoBDR,KApBC,EAoBMC,MApBN,EAoBc;IAC1BD,KAAK,CAACN,SAAN,GAAkBO,MAAM,CAACC,OAAzB;EACD,CAtBa;EAuBdO,UAvBc,sBAuBHT,KAvBG,EAuBIC,MAvBJ,EAuBY;IACxBD,KAAK,CAACH,OAAN,GAAgBI,MAAM,CAACC,OAAvB;EACD,CAzBa;EA0BdQ,SA1Bc,qBA0BJV,KA1BI,EA0BE;IACdA,KAAK,CAACV,eAAN,GAAwB,CAAxB;IACAU,KAAK,CAACT,aAAN,GAAsB,CAAtB;IACAS,KAAK,CAACN,SAAN,GAAkB,CAAC,CAAnB;IACAM,KAAK,CAACR,cAAN,GAAuB,CAAC,CAAxB;IACAQ,KAAK,CAACP,eAAN,GAAwB,EAAxB;IACAO,KAAK,CAACJ,UAAN,GAAmB,KAAnB;IACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;EAED;AAnCa,CAAjB;AAuCD,IAAMc,SAAS,GAAGvB,WAAW,CAAC;EAACwB,IAAI,EAAE,MAAP;EAAevB,YAAY,EAAZA,YAAf;EAA6BS,QAAQ,EAARA;AAA7B,CAAD,CAA7B;AAEO,IAAQC,kBAAR,GAA+BY,SAAS,CAACE,OAAzC,CAAQd,kBAAR;;AACA,IAAQI,gBAAR,GAA6BQ,SAAS,CAACE,OAAvC,CAAQV,gBAAR;;AACA,IAAQC,iBAAR,GAA8BO,SAAS,CAACE,OAAxC,CAAQT,iBAAR;;AACA,IAAQC,kBAAR,GAA+BM,SAAS,CAACE,OAAzC,CAAQR,kBAAR;;AACA,IAAQC,eAAR,GAA4BK,SAAS,CAACE,OAAtC,CAAQP,eAAR;;AACA,IAAQC,aAAR,GAA0BI,SAAS,CAACE,OAApC,CAAQN,aAAR;;AACA,IAAQC,YAAR,GAAyBG,SAAS,CAACE,OAAnC,CAAQL,YAAR;;AACA,IAAQE,SAAR,GAAsBC,SAAS,CAACE,OAAhC,CAAQH,SAAR;;AACA,IAAQD,UAAR,GAAuBE,SAAS,CAACE,OAAjC,CAAQJ,UAAR;;AACP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACd,KAAD;EAAA,OAAYA,KAAK,CAACe,IAAN,CAAWxB,aAAX,KAA6BS,KAAK,CAACe,IAAN,CAAWzB,eAApD;AAAA,CAArB;AACP,eAAeqB,SAAS,CAACK,OAAzB"},"metadata":{},"sourceType":"module"}