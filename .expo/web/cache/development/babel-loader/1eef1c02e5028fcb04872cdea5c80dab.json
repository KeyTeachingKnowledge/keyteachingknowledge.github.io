{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Colors } from \"../../redux/slices/settings\";\nimport { ResetQuiz } from \"../../redux/slices/quiz\";\nimport { SetAccuracy } from \"../../redux/slices/stats\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function StatsScreen(_ref) {\n  var correctAnswers = _ref.correctAnswers,\n      navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var colors = useSelector(Colors);\n  var comingFromHome = useSelector(function (state) {\n    return state.settings.comingFromHome;\n  });\n\n  var resetQuiz = function resetQuiz() {\n    return dispatch(ResetQuiz());\n  };\n\n  var selectedChoices = useSelector(function (state) {\n    return state.quiz.selectedChoices;\n  });\n  var correctAnswersTrimmed = correctAnswers.slice(0, selectedChoices.length);\n  var differenceArray = correctAnswersTrimmed.map(function (answer, i) {\n    return answer - selectedChoices[i];\n  });\n  var _ref2 = [useSelector(function (state) {\n    return state.stats.accuracy;\n  }), function (payload) {\n    return dispatch(SetAccuracy(payload));\n  }],\n      accuracy = _ref2[0],\n      setAccuracy = _ref2[1];\n\n  var _useState = useState('0'),\n      _useState2 = _slicedToArray(_useState, 2),\n      winningStreak = _useState2[0],\n      setWinningStreak = _useState2[1];\n\n  var _useState3 = useState('-'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rank = _useState4[0],\n      setRank = _useState4[1];\n\n  useEffect(function () {\n    if (selectedChoices.length > 0) {\n      var acc = Math.ceil(differenceArray.filter(function (v) {\n        return v === 0;\n      }).length / selectedChoices.length * 100);\n      setAccuracy(acc);\n      var longestStreak = 0;\n      var currStreak = 0;\n      var i = 0;\n\n      while (i < differenceArray.length) {\n        if (differenceArray[i] == 0) {\n          currStreak += 1;\n        } else {\n          longestStreak = Math.max(longestStreak, currStreak);\n          currStreak = 0;\n        }\n\n        i++;\n      }\n\n      setWinningStreak(Math.max(longestStreak, currStreak));\n      if (acc < 10) setRank('Wood 🪵');else if (acc < 25) setRank('Iron 🪨');else if (acc < 35) setRank('Bronze 🔱');else if (acc < 45) setRank('Silver ⚓');else if (acc < 60) setRank('Gold 🎖');else if (acc < 70) setRank('Platinum 💠');else if (acc < 80) setRank('Diamond 💎');else if (acc < 95) setRank('Master 👑');else if (acc < 98) setRank('Professor 🎓');else setRank('Legend 🐉');\n    }\n  }, [selectedChoices]);\n  return _jsxs(View, {\n    style: [styles.container, {\n      backgroundColor: colors.dark\n    }],\n    children: [Platform.OS !== 'web' && _jsx(View, {\n      style: styles.logoContainer,\n      children: _jsx(Text, {\n        style: [styles.logo, {\n          color: colors.light\n        }],\n        children: \"Statistics\"\n      })\n    }), _jsxs(View, {\n      style: [styles.settingContainer, {\n        backgroundColor: colors.dark,\n        borderColor: colors.light\n      }],\n      children: [_jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light\n        }],\n        onPress: function onPress() {},\n        children: \"Your Highest Accuracy is\"\n      }), _jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light,\n          fontSize: 50\n        }],\n        onPress: function onPress() {},\n        children: accuracy == '-.0%' ? '-' : accuracy\n      })]\n    }), _jsxs(View, {\n      style: [styles.settingContainer, {\n        backgroundColor: colors.dark,\n        borderColor: colors.light\n      }],\n      children: [_jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light\n        }],\n        onPress: function onPress() {},\n        children: \"Your Longest Winning Streak is\"\n      }), _jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light,\n          fontSize: 50\n        }],\n        onPress: function onPress() {},\n        children: winningStreak\n      })]\n    }), _jsxs(View, {\n      style: [styles.settingContainer, {\n        backgroundColor: colors.dark,\n        borderColor: colors.light\n      }],\n      children: [_jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light\n        }],\n        onPress: function onPress() {},\n        children: \"Your Overall Rank is\"\n      }), _jsx(Text, {\n        style: [styles.settingText, {\n          color: colors.light,\n          fontSize: 50\n        }],\n        onPress: function onPress() {},\n        children: rank\n      })]\n    }), _jsx(View, {\n      style: [styles.settingContainer, {\n        backgroundColor: colors.light,\n        borderColor: colors.dark\n      }],\n      children: _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: [styles.settingText, {\n            color: colors.dark\n          }],\n          onPress: function onPress() {\n            resetQuiz();\n            setAccuracy('-');\n            setWinningStreak('0');\n            setRank('-');\n          },\n          children: \"Reset Progress\"\n        })\n      })\n    }), !comingFromHome ? _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: [styles.settingContainer, {\n          backgroundColor: colors.light,\n          borderColor: colors.dark\n        }],\n        children: _jsx(TouchableOpacity, {\n          children: _jsx(Text, {\n            style: [styles.settingText, {\n              color: colors.dark\n            }],\n            onPress: function onPress() {\n              navigation.navigate('HomeScreen');\n            },\n            children: \"Home\"\n          })\n        })\n      })\n    }) : null]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  logo: {\n    fontSize: 40,\n    fontFamily: 'Poppins-Regular',\n    textAlign: 'left'\n  },\n  logoContainer: {\n    marginTop: 50,\n    marginBottom: 10,\n    marginHorizontal: 20\n  },\n  settingContainer: {\n    minWidth: '90%',\n    borderWidth: 2,\n    marginHorizontal: 20,\n    borderRadius: 10,\n    padding: 10,\n    marginVertical: 10\n  },\n  settingText: {\n    fontFamily: 'Poppins-Bold',\n    fontSize: 17,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["useEffect","useState","useSelector","useDispatch","Colors","ResetQuiz","SetAccuracy","StatsScreen","correctAnswers","navigation","dispatch","colors","comingFromHome","state","settings","resetQuiz","selectedChoices","quiz","correctAnswersTrimmed","slice","length","differenceArray","map","answer","i","stats","accuracy","payload","setAccuracy","winningStreak","setWinningStreak","rank","setRank","acc","Math","ceil","filter","v","longestStreak","currStreak","max","styles","container","backgroundColor","dark","Platform","OS","logoContainer","logo","color","light","settingContainer","borderColor","settingText","fontSize","navigate","StyleSheet","create","flex","fontFamily","textAlign","marginTop","marginBottom","marginHorizontal","minWidth","borderWidth","borderRadius","padding","marginVertical"],"sources":["/Users/essam/Documents/GitHub/quizzery.github.io/components/StatScreen/StatsScreen.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Colors } from '../../redux/slices/settings';\nimport { ResetQuiz } from '../../redux/slices/quiz';\nimport { SetAccuracy } from '../../redux/slices/stats';\nimport { Platform } from 'react-native';\n\nexport default function StatsScreen({ correctAnswers, navigation }) {\n   const dispatch = useDispatch();\n   const colors = useSelector(Colors);\n   const comingFromHome = useSelector(state => state.settings.comingFromHome);\n   const resetQuiz = () => dispatch(ResetQuiz());\n   const selectedChoices = useSelector(state => state.quiz.selectedChoices);\n   let correctAnswersTrimmed = correctAnswers.slice(0, selectedChoices.length);\n   let differenceArray = correctAnswersTrimmed.map(function (answer, i) {\n      return answer - selectedChoices[i];\n   });\n   const [accuracy, setAccuracy] = [ useSelector(state => state.stats.accuracy), (payload)=> dispatch(SetAccuracy(payload))];\n   const [winningStreak, setWinningStreak] = useState('0');\n   const [rank, setRank] = useState('-');\n   useEffect(() => {\n      if (selectedChoices.length > 0) {\n         let acc = Math.ceil((differenceArray.filter(v => v === 0).length / selectedChoices.length) * 100)\n         setAccuracy(acc);\n         let longestStreak = 0\n         let currStreak = 0\n         let i = 0\n         while (i < differenceArray.length) {\n            if (differenceArray[i] == 0) {\n               currStreak += 1\n            }\n            else {\n               longestStreak = Math.max(longestStreak, currStreak)\n               currStreak = 0\n            }\n            i++\n         }\n         setWinningStreak( Math.max(longestStreak, currStreak))\n\n         if (acc < 10)\n            setRank('Wood 🪵')\n         else if (acc < 25)\n            setRank('Iron 🪨')\n         else if (acc < 35)\n            setRank('Bronze 🔱')\n         else if (acc < 45)\n            setRank('Silver ⚓')\n         else if (acc < 60)\n            setRank('Gold 🎖')\n         else if (acc < 70)\n            setRank('Platinum 💠')\n         else if (acc < 80)\n            setRank('Diamond 💎')\n         else if (acc < 95)\n            setRank('Master 👑')\n         else if (acc < 98)\n            setRank('Professor 🎓')\n         else\n            setRank('Legend 🐉')\n      }\n\n   }, [selectedChoices])\n\n\n\n\n   return (\n      <View style={[styles.container, { backgroundColor: colors.dark }]}>\n         {(Platform.OS !== 'web')&&<View style={styles.logoContainer}>\n            <Text style={[styles.logo, { color: colors.light }]}>\n               Statistics\n            </Text>\n         </View>}\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Highest Accuracy is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n              {(accuracy=='-.0%')?('-'):(accuracy)} \n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Longest Winning Streak is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n               {winningStreak}\n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.dark, borderColor: colors.light }]}>\n            <Text style={[styles.settingText, { color: colors.light, }]} onPress={() => {\n            }}>\n               Your Overall Rank is\n            </Text>\n            <Text style={[styles.settingText, { color: colors.light, fontSize: 50 }]} onPress={() => {\n            }}>\n               {rank}\n            </Text>\n         </View>\n\n         <View style={[styles.settingContainer, { backgroundColor: colors.light, borderColor: colors.dark }]}>\n                  <TouchableOpacity>\n                     <Text style={[styles.settingText, { color: colors.dark, }]} onPress={() => {\n                        resetQuiz()\n                        setAccuracy('-');\n                        setWinningStreak('0');\n                        setRank('-');\n                     }}>\n                        Reset Progress\n                     </Text>\n                  </TouchableOpacity>\n               </View>\n\n         {(!comingFromHome) ? (\n            <>\n\n               <View style={[styles.settingContainer, { backgroundColor: colors.light, borderColor: colors.dark }]}>\n                  <TouchableOpacity>\n                     <Text style={[styles.settingText, { color: colors.dark, }]} onPress={() => {\n                       navigation.navigate('HomeScreen')\n                     }}>\n                        Home\n                     </Text>\n                  </TouchableOpacity>\n               </View>\n            </>) : null}\n\n\n\n\n\n      </View>\n   )\n}\n\n\nconst styles = StyleSheet.create({\n   container: {\n      flex: 1,\n\n   },\n   logo: {\n      fontSize: 40,\n      fontFamily: 'Poppins-Regular',\n      textAlign: 'left',\n   },\n   logoContainer: {\n      marginTop: 50,\n      marginBottom: 10,\n      marginHorizontal: 20\n   },\n\n\n   settingContainer: {\n      minWidth: '90%',\n      borderWidth: 2,\n      marginHorizontal: 20,\n      borderRadius: 10,\n      padding: 10,\n      marginVertical: 10\n   },\n   settingText: {\n      fontFamily: 'Poppins-Bold',\n      fontSize: 17,\n      textAlign: 'center'\n   }\n\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}