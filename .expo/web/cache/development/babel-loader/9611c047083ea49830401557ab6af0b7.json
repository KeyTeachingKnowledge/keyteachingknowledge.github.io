{"ast":null,"code":"import { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Colors } from \"../../../redux/slices/settings\";\nimport { SetAccuracy } from \"../../../redux/slices/stats\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function InfoBar(_ref) {\n  var totalCount = _ref.totalCount,\n      correctAnswers = _ref.correctAnswers;\n  var dispatch = useDispatch();\n  var shownQuestion = useSelector(function (state) {\n    return state.quiz.shownQuestion;\n  });\n  var colors = useSelector(Colors);\n  var selectedChoices = useSelector(function (state) {\n    return state.quiz.selectedChoices;\n  });\n  var correctAnswersTrimmed = correctAnswers.slice(0, selectedChoices.length);\n  var differenceArray = correctAnswersTrimmed.map(function (answer, i) {\n    return answer - selectedChoices[i];\n  });\n  var _ref2 = [useSelector(function (state) {\n    return state.stats.accuracy;\n  }), function (payload) {\n    return dispatch(SetAccuracy(payload));\n  }],\n      accuracy = _ref2[0],\n      setAccuracy = _ref2[1];\n  useEffect(function () {\n    if (selectedChoices.length > 0) {\n      var acc = Math.ceil(differenceArray.filter(function (v) {\n        return v === 0;\n      }).length / selectedChoices.length * 100);\n      setAccuracy(acc);\n    }\n  }, [selectedChoices]);\n  return _jsxs(View, {\n    style: styles.infoBar,\n    children: [_jsx(View, {\n      children: _jsxs(Text, {\n        style: [styles.infoItem, {\n          backgroundColor: colors.light,\n          color: colors.dark,\n          borderColor: colors.border,\n          marginLeft: 'auto'\n        }],\n        children: [\" \", _jsx(Text, {\n          style: styles.Q,\n          children: \"Question\"\n        }), \" \", shownQuestion + 1, \"/\", totalCount]\n      })\n    }), _jsx(View, {\n      children: _jsxs(Text, {\n        style: [styles.infoItem, {\n          backgroundColor: colors.light,\n          color: colors.dark,\n          borderColor: colors.border,\n          marginRight: 'auto'\n        }],\n        children: [\"\\uD83D\\uDCC8 \", accuracy == '-.0%' ? '-' : accuracy, \"  \"]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  infoBar: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: 40,\n    width: '93%'\n  },\n  infoItem: {\n    padding: 10,\n    borderRadius: 20,\n    borderWidth: 0.8,\n    fontFamily: 'Poppins-Bold',\n    marginHorizontal: 16\n  }\n});","map":{"version":3,"names":["useEffect","useSelector","useDispatch","Colors","SetAccuracy","InfoBar","totalCount","correctAnswers","dispatch","shownQuestion","state","quiz","colors","selectedChoices","correctAnswersTrimmed","slice","length","differenceArray","map","answer","i","stats","accuracy","payload","setAccuracy","acc","Math","ceil","filter","v","styles","infoBar","infoItem","backgroundColor","light","color","dark","borderColor","border","marginLeft","Q","marginRight","StyleSheet","create","flexDirection","justifyContent","alignItems","marginTop","width","padding","borderRadius","borderWidth","fontFamily","marginHorizontal"],"sources":["/Users/essam/Documents/GitHub/quizzery.github.io/components/QuizScreen/subcomponents/InfoBar.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Colors } from '../../../redux/slices/settings';\nimport { SetAccuracy } from '../../../redux/slices/stats';\nexport default function InfoBar({ totalCount, correctAnswers}){\n  const dispatch = useDispatch();\n  const shownQuestion = useSelector(state => state.quiz.shownQuestion)\n  const colors = useSelector(Colors)\n  const selectedChoices = useSelector(state => state.quiz.selectedChoices);\n  let correctAnswersTrimmed = correctAnswers.slice(0, selectedChoices.length);\n  let differenceArray = correctAnswersTrimmed.map(function (answer, i) {\n    return answer - selectedChoices[i];\n  })\n  const [accuracy, setAccuracy] = [ useSelector(state => state.stats.accuracy), (payload)=> dispatch(SetAccuracy(payload))];\n  useEffect(() => {\n  if (selectedChoices.length > 0) {\n    let acc = Math.ceil((differenceArray.filter(v => v === 0).length / selectedChoices.length) * 100)\n    setAccuracy(acc);\n  }}, [selectedChoices]);\n\n   return (\n     <View style={styles.infoBar}>\n     <View>\n       <Text style={[styles.infoItem,{backgroundColor: colors.light, color: colors.dark, borderColor: colors.border, marginLeft: 'auto'}]}> <Text style={styles.Q}>Question</Text> {shownQuestion+1}/{totalCount}</Text>\n     </View>\n\n     <View>\n       <Text style={[styles.infoItem,{backgroundColor: colors.light, color: colors.dark, borderColor: colors.border, marginRight: 'auto'}]}>ðŸ“ˆ {(accuracy=='-.0%')?('-'):(accuracy)}  </Text>\n     </View>\n   </View>\n   )\n }\n\n const styles = StyleSheet.create({\n   infoBar: {\n     flexDirection: 'row',\n     justifyContent: 'space-between',\n     alignItems: 'center',\n     marginTop: 40,\n     width: '93%',\n   },\n   infoItem: {\n     padding: 10,\n     borderRadius: 20,\n     borderWidth: 0.8,\n     fontFamily: 'Poppins-Bold',\n     marginHorizontal: 16\n   },\n \n   \n });\n "],"mappings":"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"},"metadata":{},"sourceType":"module"}